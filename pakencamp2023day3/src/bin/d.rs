// use itertools::Itertools;

// fn gcd(mut x: u64, mut y: u64) -> u64 {
//     while y != 0 {
//         x %= y;
//         (x, y) = (y, x);
//     }
//     x
// }

fn main() {
    println!("411782264189298 274521509459532 183014339639688 122009559759792 81339706506528 54226471004352 36150980669568 24100653779712 16067102519808 10711401679872 7140934453248 4760622968832 3173748645888 2115832430592 1410554953728 940369969152 626913312768 417942208512 278628139008 185752092672 123834728448 82556485632 55037657088 36691771392 24461180928 16307453952 10871635968 7247757312 4831838208 3221225472");
    // let mut a = [1u64; 30];
    // let mut now = 2;
    // for i in 0..30 {
    //     a[i] *= now;
    //     now <<= 1;
    // }
    // let mut now = 3;
    // for i in (0..30).rev() {
    //     a[i] *= now;
    //     now *= 3;
    // }
    // println!("{}", a.iter().join(" "));

    // let mut t = vec![];
    // for i in 0..30 {
    //     for j in i + 1..=30 {
    //         t.push(a[i..j].iter().cloned().fold(0, gcd));
    //     }
    // }

    // t.sort();
    // t.dedup();
    // assert_eq!(t.len(), 31 * 15)
}
